{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.6"},"colab":{"name":"reflya.ra@gmail.com.ipynb","provenance":[{"file_id":"1DtOiJLaUzJoMwMedsMtrxJsu8wsSfTJJ","timestamp":1589423820867}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"1pLYATHcCpft","colab_type":"text"},"source":["<h1> Quiz 1 Pemahaman tentang Model Selection</h1>\n","\n","Jelaskan dengan bahasa kalian sendiri\n","\n","1. Apa itu Bias dan Variance?\n","2. Apa itu Overfitting dan Underfitting?\n","3. Apa yang bisa kita lakukan untuk mengatur kompleksitas dari model?\n","4. Bagaimana model yang baik?\n","5. Kapan kira2 kita menggunakan GridSearchcv dan kapan menggunakan RandomizedSearchCV?"]},{"cell_type":"markdown","metadata":{"id":"azyl9ysnMa6n","colab_type":"text"},"source":["1.  **Bias** merupakan salah satu error yang bisa ditanggulangi pada sebuah model dengan mengatur hyper parameter dari model tersebut. Bias merupakan kondisi yang terjadi jika sebuah data di ketahui terlalu sederhana sehingga merupakan penyebab utamanya terjadi kasus *underfitting*. dengan kata lain bias merupakan error yang disebabkan karena ketidak akuratan model ke data train, validation maupun test.\n","Sementara **Variance** merupakan error yang bisa ditanggulangi lainnya dengan hyper parameter yang terjadi karena model terlalu kompleks sehingga mencoba untuk melakukan fitting terlalu baik kepada train dengan error train sangat kecil dan error pada test maupun validation besar. Hal ini menyebabkan kasus *overfitting*.\n","\n","\n","2.  **Overfitting** merupakan konsep dimana suatu model berusaha sangat maksimal untuk melakukan fitting kepada data training, sehingga sangat tinggi akurasi data train tersebut tapi yang malah menyebabkan data test atau validation tidak bisa di prediksi dengan matang dan malah menyebabkan error cukup besar pada model tersebut. Sementara **Underfitting** adalah kebalikan dari *overfitting* dimana pada underfitting, model sangat tidak baik dalam mempelajari data training dan juga menyebabkan data validation dan test juga memiliki akurasi rendah. Oleh karena itu ini konsep yang menjelaskan bahwa model tidak melakukan learning dengan baik.\n","\n","\n","3.  Yang bisa dilakukan untuk mengurangi permasalahan tersebut yang paling utama adalah memastikan sebelum memilih hyperparameter untuk selalu melakukan tuning terhadap hyperparameter data tersebut, sehingga didapatkan hasil yang cukup dekat antara data test dan train, pastikan mencoba dan menjalankan kombinasi hyperparameter yang paling tepat untuk memastikan data yang paling tidak bias dan variance. Lalu jika ternyata hasil masih belum baik, maka pilihan lainnya adalah mencoba model lainnya.\n","\n","4.  Model yang baik adalah model yang **memiliki nilai bias dan variance yang kecil** dan perbedaan errornya tidak jauh, sehingga model tersebut optimal, karena **tidak terlalu overfitting dan tidak terlalu underfitting**. Hal ini bisa dipastikan dengan mengukur nilai dari akurasi data training dan testing yang paling kecil nilainya dan yang paling besar akurasinya.\n","\n","5.  **GridSearchCV** paling baik digunakan ketika kita ingin mencoba tuning hyperparameter pada range yang kecil dan tidak membutuhkan banyak kombinasi, sehingga tidak terlalu banyak kombinasi yang di test dan menyebabkan melakukan search membutuhkan waktu lama. Sementara **RandomizedSearchCV** baik digunakan ketika range dari hyperparameter yang kita uji besar, sehingga randomized tidak perlu melakukan testing ke semua parameter yang memiliki nilai cukup mirip dan dapat mendapatkan hasil yang cukup distinct dan cepat.\n"]},{"cell_type":"markdown","metadata":{"id":"q4eVOzE-Cpfw","colab_type":"text"},"source":["<h1> Quiz 2 Praktis Model Selection</h1>\n","\n","1. Bagi kedua data ini menjadi data training dan data test dengan test_size=0.25.\n","2. Gunakan algoritma KNN sebagai model classifier.\n","3. Gunakan fungsi GridSearchCV untuk hyperparameter tuning dan model selection.\n","4. jumlah fold bebas!, gunakan scoring 'roc_auc'\n","5. Definisikan kombinasi hyperparameter untuk model selection dengan GridSearchCV. kombinasi Hyperparameter bebas, baca lagi dokumentasi KNN di link berikut https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html untuk memahami lagi jenis2 hyperparameter di algorithma KNN.\n","6. Latih model terhadap data training.\n","7. Apa hyperparameter terbaik untuk kombinasi hyperparameter kalian?\n","8. Berapa score validasi terbaik dari model tersebut?\n","9. Prediksi probabilitasi output dari model yang telah di buat terhadap data test. note : gunakan method .predict_proba() untuk menghasilkan output probabilitas\n","10. Perhatikan bahwa hasil prediksi ada 2, dimana masing2 adalah nilai probabilitas untuk setiap class label. Ambil nilai probabilitas pasien phositive meninggal dalam waktu kurang dari 5 tahun. note : gunakan bantuan attirubte .classes_ untuk mengetahui urutan label dari hasil prediksi probabilitas.\n","11. Berapa nilai score roc_auc untuk data test?\n","12. Apakah model anda termasuk baik atau overfitting atau underfitting?\n","13. Ulangi tahap di atas namun kali ini menggunakan algoritma DecisionTreeClassifier dan kalian bisa menggunakan RandomizedSearchCV apabila process training lama. pelajari algoritma DecisionTreeClassifier di linkberikut : https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html?highlight=decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier\n","14. Bandingkan scorenya dengan Algoritma KNN, mana yang lebih baik?\n","\n","Note : Data Science adalah experiment, sangat di dimungkinkan memerlukan beberapa kali percobaan untuk mendapatkan hasil yang terbaik! Happy Coding :)"]},{"cell_type":"code","metadata":{"id":"CaUS6eP7Cpfy","colab_type":"code","colab":{}},"source":["import pandas as pd\n","\n","url = 'https://raw.githubusercontent.com/jbrownlee/Datasets/master/haberman.csv'\n","list_cols = ['Age', \"Patient's Years\", \"N_positive_ax\", \"survival_status\"]\n","df = pd.read_csv(url, names=list_cols)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5_liesOMCpf8","colab_type":"code","outputId":"382168f5-cf48-4295-aa8e-a1592adcf92e","executionInfo":{"status":"ok","timestamp":1589501889102,"user_tz":-420,"elapsed":1916,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["df.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Patient's Years</th>\n","      <th>N_positive_ax</th>\n","      <th>survival_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>30</td>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>30</td>\n","      <td>62</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>65</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31</td>\n","      <td>59</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>31</td>\n","      <td>65</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age  Patient's Years  N_positive_ax  survival_status\n","0   30               64              1                1\n","1   30               62              3                1\n","2   30               65              0                1\n","3   31               59              2                1\n","4   31               65              4                1"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"g34U4rFJRao2","colab_type":"code","colab":{}},"source":["import numpy as np\n","from sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV\n","from sklearn.metrics import roc_auc_score, accuracy_score\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dSDuj0ppTA1p","colab_type":"code","outputId":"823ee302-b151-4cb4-e7e4-a62a3ca4fc5a","executionInfo":{"status":"ok","timestamp":1589501904606,"user_tz":-420,"elapsed":519,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["df['survival_status'].value_counts()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    225\n","2     81\n","Name: survival_status, dtype: int64"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"rzG9Wd91S1Lc","colab_type":"code","colab":{}},"source":["X = df.drop(['survival_status'], axis=1)\n","y = df['survival_status']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=100, stratify=y)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"llxySX4_vUsJ","colab_type":"text"},"source":["# K-Nearest Neighbors"]},{"cell_type":"code","metadata":{"id":"99UMoe7dUMI2","colab_type":"code","outputId":"e66ddf89-10d6-4a92-87d4-c08c2b5567b2","executionInfo":{"status":"ok","timestamp":1589502732879,"user_tz":-420,"elapsed":96194,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":323}},"source":["knc_model = KNeighborsClassifier()\n","\n","parameters = {'n_neighbors' : np.arange(5, 100), 'weights' : ['distance', 'uniform'], 'p' : np.arange(2, 15)}\n","knc_gscv = GridSearchCV(knc_model, param_grid=parameters, scoring='accuracy', cv=10,  n_jobs=-1)\n","knc_gscv.fit(X_train, y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=10, error_score=nan,\n","             estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30,\n","                                            metric='minkowski',\n","                                            metric_params=None, n_jobs=None,\n","                                            n_neighbors=5, p=2,\n","                                            weights='uniform'),\n","             iid='deprecated', n_jobs=-1,\n","             param_grid={'n_neighbors': array([ 5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\n","       22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n","       39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,\n","       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\n","       73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\n","       90, 91, 92, 93, 94, 95, 96, 97, 98, 99]),\n","                         'p': array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14]),\n","                         'weights': ['distance', 'uniform']},\n","             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n","             scoring='accuracy', verbose=0)"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"VjasJQLgYSji","colab_type":"code","outputId":"fc1c17ff-bd22-434a-cf70-39a46504f11d","executionInfo":{"status":"ok","timestamp":1589502737189,"user_tz":-420,"elapsed":1177,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["print(knc_gscv.best_params_)\n","print(knc_gscv.best_score_)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'n_neighbors': 27, 'p': 3, 'weights': 'uniform'}\n","0.7816205533596837\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_GtXTzzUY7Mi","colab_type":"code","outputId":"a6aa25fe-337e-4da9-83ba-2f8977aba208","executionInfo":{"status":"ok","timestamp":1589502741017,"user_tz":-420,"elapsed":1011,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["knc_model = KNeighborsClassifier(n_neighbors=27, weights='uniform', p=3)\n","knc_model.fit(X_train, y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n","                     metric_params=None, n_jobs=None, n_neighbors=27, p=3,\n","                     weights='uniform')"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"yYNtKQXCZi7t","colab_type":"code","colab":{}},"source":["y_pred = knc_model.predict(X_test)\n","y_pred_train = knc_model.predict(X_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lBCJLe1sb-Ma","colab_type":"code","outputId":"4dfa7c61-e8f7-4618-b551-b63d5ff261e0","executionInfo":{"status":"ok","timestamp":1589502743213,"user_tz":-420,"elapsed":977,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["knc_model.classes_"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2])"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"-QdKkVA-bxaA","colab_type":"code","outputId":"d480cbdc-c2ba-409c-e40e-d4816b9042da","executionInfo":{"status":"ok","timestamp":1589502744318,"user_tz":-420,"elapsed":993,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["knc_proba = knc_model.predict_proba(X_test)\n","print(knc_proba)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[0.74074074 0.25925926]\n"," [0.66666667 0.33333333]\n"," [0.44444444 0.55555556]\n"," [0.88888889 0.11111111]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.7037037  0.2962963 ]\n"," [0.74074074 0.25925926]\n"," [0.96296296 0.03703704]\n"," [0.92592593 0.07407407]\n"," [0.7037037  0.2962963 ]\n"," [0.88888889 0.11111111]\n"," [0.77777778 0.22222222]\n"," [0.85185185 0.14814815]\n"," [0.37037037 0.62962963]\n"," [0.96296296 0.03703704]\n"," [0.81481481 0.18518519]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.2962963  0.7037037 ]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.81481481 0.18518519]\n"," [0.88888889 0.11111111]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.51851852 0.48148148]\n"," [0.40740741 0.59259259]\n"," [0.81481481 0.18518519]\n"," [0.85185185 0.14814815]\n"," [0.88888889 0.11111111]\n"," [0.88888889 0.11111111]\n"," [0.85185185 0.14814815]\n"," [0.77777778 0.22222222]\n"," [0.88888889 0.11111111]\n"," [0.66666667 0.33333333]\n"," [0.81481481 0.18518519]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.7037037  0.2962963 ]\n"," [0.92592593 0.07407407]\n"," [0.88888889 0.11111111]\n"," [0.81481481 0.18518519]\n"," [0.85185185 0.14814815]\n"," [0.88888889 0.11111111]\n"," [0.88888889 0.11111111]\n"," [0.55555556 0.44444444]\n"," [0.77777778 0.22222222]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.55555556 0.44444444]\n"," [0.81481481 0.18518519]\n"," [0.2962963  0.7037037 ]\n"," [0.81481481 0.18518519]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.77777778 0.22222222]\n"," [0.88888889 0.11111111]\n"," [0.55555556 0.44444444]\n"," [0.85185185 0.14814815]\n"," [0.77777778 0.22222222]\n"," [0.96296296 0.03703704]\n"," [0.62962963 0.37037037]\n"," [0.7037037  0.2962963 ]\n"," [0.88888889 0.11111111]\n"," [0.81481481 0.18518519]\n"," [0.74074074 0.25925926]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.48148148 0.51851852]\n"," [0.92592593 0.07407407]\n"," [0.55555556 0.44444444]\n"," [0.77777778 0.22222222]\n"," [0.66666667 0.33333333]\n"," [0.85185185 0.14814815]\n"," [0.81481481 0.18518519]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ltxmgslQimeV","colab_type":"code","outputId":"c4427b32-90a4-4ce2-e07c-ac4f3d73a5c2","executionInfo":{"status":"ok","timestamp":1589502745883,"user_tz":-420,"elapsed":840,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":55}},"source":["pos_percentage = []\n","for x, y in knc_proba:\n","  pos_percentage.append(y)\n","\n","print(pos_percentage)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[0.25925925925925924, 0.3333333333333333, 0.5555555555555556, 0.1111111111111111, 0.07407407407407407, 0.25925925925925924, 0.2962962962962963, 0.25925925925925924, 0.037037037037037035, 0.07407407407407407, 0.2962962962962963, 0.1111111111111111, 0.2222222222222222, 0.14814814814814814, 0.6296296296296297, 0.037037037037037035, 0.18518518518518517, 0.07407407407407407, 0.2222222222222222, 0.18518518518518517, 0.7037037037037037, 0.07407407407407407, 0.25925925925925924, 0.18518518518518517, 0.1111111111111111, 0.07407407407407407, 0.2222222222222222, 0.48148148148148145, 0.5925925925925926, 0.18518518518518517, 0.14814814814814814, 0.1111111111111111, 0.1111111111111111, 0.14814814814814814, 0.2222222222222222, 0.1111111111111111, 0.3333333333333333, 0.18518518518518517, 0.07407407407407407, 0.25925925925925924, 0.2962962962962963, 0.07407407407407407, 0.1111111111111111, 0.18518518518518517, 0.14814814814814814, 0.1111111111111111, 0.1111111111111111, 0.4444444444444444, 0.2222222222222222, 0.07407407407407407, 0.2222222222222222, 0.4444444444444444, 0.18518518518518517, 0.7037037037037037, 0.18518518518518517, 0.2222222222222222, 0.18518518518518517, 0.2222222222222222, 0.1111111111111111, 0.4444444444444444, 0.14814814814814814, 0.2222222222222222, 0.037037037037037035, 0.37037037037037035, 0.2962962962962963, 0.1111111111111111, 0.18518518518518517, 0.25925925925925924, 0.2222222222222222, 0.18518518518518517, 0.5185185185185185, 0.07407407407407407, 0.4444444444444444, 0.2222222222222222, 0.3333333333333333, 0.14814814814814814, 0.18518518518518517]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7AZxVc6ddQDv","colab_type":"code","outputId":"6bf14690-b688-44a9-c576-532ad2471a71","executionInfo":{"status":"ok","timestamp":1589502747886,"user_tz":-420,"elapsed":1008,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["train_rocauc_score = roc_auc_score(y_train, y_pred_train)\n","test_rocauc_score = roc_auc_score(y_test, pos_percentage) \n","print(\"nilai train untuk roc auc : \",train_rocauc_score,\"\\nnilai test untuk roc auc : \",test_rocauc_score)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["nilai train untuk roc auc :  0.6401249024199843 \n","nilai test untuk roc auc :  0.6114035087719298\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dIaWvhV4gIf_","colab_type":"code","outputId":"bc64f261-6876-413c-b266-13b71834af46","executionInfo":{"status":"ok","timestamp":1589502750263,"user_tz":-420,"elapsed":764,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["train_acc_score = accuracy_score(y_train, y_pred_train)\n","test_acc_score = accuracy_score(y_test, y_pred)\n","\n","print(\"nilai train untuk accuracy : \",train_acc_score,\"\\nnilai test untuk accuracy : \",test_acc_score)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["nilai train untuk accuracy :  0.7860262008733624 \n","nilai test untuk accuracy :  0.7402597402597403\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"2SpJEy5rokTv","colab_type":"text"},"source":["Pada hasil yang saya dapatkan di classifier KNN yang dihasilkan, data tidak mengalami sedikit overfitting karena nilai dari ROC AUC dan juga accuracy untuk keduanya mengalami perbedaan yang termasuk lumayan, yaitu sekitar 3 persen pada ROC AUC dan 4 persen pada akurasi. Lalu untuk nilai roc-auc perlu mengalami perbaikan karena hasilnya yang masih pada batas bawah 0.6 dimana beberapa nilai yang seharusnya berada di kelas yang tepat di salah klasifikasikan oleh model KNN Classifier yang dibuat.\n"]},{"cell_type":"markdown","metadata":{"id":"WHFvBNJmqfM4","colab_type":"text"},"source":["# Decision Tree Classifier"]},{"cell_type":"code","metadata":{"id":"lG8Qe6ttmBAy","colab_type":"code","outputId":"eadc28f2-8795-41d2-82e9-fa42d07de761","executionInfo":{"status":"ok","timestamp":1589502771036,"user_tz":-420,"elapsed":2966,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":431}},"source":["dst_model = DecisionTreeClassifier()\n","\n","parameters = {'max_depth' : np.arange(1, 500), 'criterion' : ['gini', 'entropy'], 'splitter' : ['best', 'random']}\n","dst_gscv = RandomizedSearchCV(dst_model, parameters, n_iter=50, scoring='accuracy', cv=10)\n","dst_gscv.fit(X_train, y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomizedSearchCV(cv=10, error_score=nan,\n","                   estimator=DecisionTreeClassifier(ccp_alpha=0.0,\n","                                                    class_weight=None,\n","                                                    criterion='gini',\n","                                                    max_depth=None,\n","                                                    max_features=None,\n","                                                    max_leaf_nodes=None,\n","                                                    min_impurity_decrease=0.0,\n","                                                    min_impurity_split=None,\n","                                                    min_samples_leaf=1,\n","                                                    min_samples_split=2,\n","                                                    min_weight_fraction_leaf=0.0,\n","                                                    presort='deprecated',\n","                                                    random_state=None,\n","                                                    splitter='best'),...\n","       443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455,\n","       456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468,\n","       469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481,\n","       482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,\n","       495, 496, 497, 498, 499]),\n","                                        'splitter': ['best', 'random']},\n","                   pre_dispatch='2*n_jobs', random_state=None, refit=True,\n","                   return_train_score=False, scoring='accuracy', verbose=0)"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"Ghr0uG2RrLZc","colab_type":"code","outputId":"0ae21d4e-1566-4d30-80c9-348b820a177a","executionInfo":{"status":"ok","timestamp":1589502774238,"user_tz":-420,"elapsed":1002,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["print(dst_gscv.best_params_)\n","print(dst_gscv.best_score_)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'splitter': 'random', 'max_depth': 4, 'criterion': 'entropy'}\n","0.7509881422924901\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Dt6aplD6r7qF","colab_type":"code","colab":{}},"source":["dst_model = DecisionTreeClassifier(splitter='random', max_depth=4, criterion='entropy')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"49zQrW25sUIp","colab_type":"code","colab":{}},"source":["dst_model.fit(X_train, y_train)\n","y_train_pred = dst_model.predict(X_train)\n","y_test_pred = dst_model.predict(X_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jADuzZI9sknD","colab_type":"code","outputId":"ead1f281-de53-488b-e773-0c451eef096d","executionInfo":{"status":"ok","timestamp":1589502796007,"user_tz":-420,"elapsed":732,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["dst_model.classes_"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2])"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"PPTN0dOSsq8S","colab_type":"code","outputId":"7fd2c74d-e70a-4a20-9a25-f74da42969ec","executionInfo":{"status":"ok","timestamp":1589502798050,"user_tz":-420,"elapsed":709,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["dst_proba = knc_model.predict_proba(X_test)\n","print(dst_proba)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[0.74074074 0.25925926]\n"," [0.66666667 0.33333333]\n"," [0.44444444 0.55555556]\n"," [0.88888889 0.11111111]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.7037037  0.2962963 ]\n"," [0.74074074 0.25925926]\n"," [0.96296296 0.03703704]\n"," [0.92592593 0.07407407]\n"," [0.7037037  0.2962963 ]\n"," [0.88888889 0.11111111]\n"," [0.77777778 0.22222222]\n"," [0.85185185 0.14814815]\n"," [0.37037037 0.62962963]\n"," [0.96296296 0.03703704]\n"," [0.81481481 0.18518519]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.2962963  0.7037037 ]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.81481481 0.18518519]\n"," [0.88888889 0.11111111]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.51851852 0.48148148]\n"," [0.40740741 0.59259259]\n"," [0.81481481 0.18518519]\n"," [0.85185185 0.14814815]\n"," [0.88888889 0.11111111]\n"," [0.88888889 0.11111111]\n"," [0.85185185 0.14814815]\n"," [0.77777778 0.22222222]\n"," [0.88888889 0.11111111]\n"," [0.66666667 0.33333333]\n"," [0.81481481 0.18518519]\n"," [0.92592593 0.07407407]\n"," [0.74074074 0.25925926]\n"," [0.7037037  0.2962963 ]\n"," [0.92592593 0.07407407]\n"," [0.88888889 0.11111111]\n"," [0.81481481 0.18518519]\n"," [0.85185185 0.14814815]\n"," [0.88888889 0.11111111]\n"," [0.88888889 0.11111111]\n"," [0.55555556 0.44444444]\n"," [0.77777778 0.22222222]\n"," [0.92592593 0.07407407]\n"," [0.77777778 0.22222222]\n"," [0.55555556 0.44444444]\n"," [0.81481481 0.18518519]\n"," [0.2962963  0.7037037 ]\n"," [0.81481481 0.18518519]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.77777778 0.22222222]\n"," [0.88888889 0.11111111]\n"," [0.55555556 0.44444444]\n"," [0.85185185 0.14814815]\n"," [0.77777778 0.22222222]\n"," [0.96296296 0.03703704]\n"," [0.62962963 0.37037037]\n"," [0.7037037  0.2962963 ]\n"," [0.88888889 0.11111111]\n"," [0.81481481 0.18518519]\n"," [0.74074074 0.25925926]\n"," [0.77777778 0.22222222]\n"," [0.81481481 0.18518519]\n"," [0.48148148 0.51851852]\n"," [0.92592593 0.07407407]\n"," [0.55555556 0.44444444]\n"," [0.77777778 0.22222222]\n"," [0.66666667 0.33333333]\n"," [0.85185185 0.14814815]\n"," [0.81481481 0.18518519]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WaZXxeK5svnt","colab_type":"code","outputId":"1d9c62e3-9d2d-4370-83aa-73d5658efdfb","executionInfo":{"status":"ok","timestamp":1589502800752,"user_tz":-420,"elapsed":780,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":55}},"source":["pos_percentage = []\n","for x, y in dst_proba:\n","  pos_percentage.append(y)\n","\n","print(pos_percentage)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[0.25925925925925924, 0.3333333333333333, 0.5555555555555556, 0.1111111111111111, 0.07407407407407407, 0.25925925925925924, 0.2962962962962963, 0.25925925925925924, 0.037037037037037035, 0.07407407407407407, 0.2962962962962963, 0.1111111111111111, 0.2222222222222222, 0.14814814814814814, 0.6296296296296297, 0.037037037037037035, 0.18518518518518517, 0.07407407407407407, 0.2222222222222222, 0.18518518518518517, 0.7037037037037037, 0.07407407407407407, 0.25925925925925924, 0.18518518518518517, 0.1111111111111111, 0.07407407407407407, 0.2222222222222222, 0.48148148148148145, 0.5925925925925926, 0.18518518518518517, 0.14814814814814814, 0.1111111111111111, 0.1111111111111111, 0.14814814814814814, 0.2222222222222222, 0.1111111111111111, 0.3333333333333333, 0.18518518518518517, 0.07407407407407407, 0.25925925925925924, 0.2962962962962963, 0.07407407407407407, 0.1111111111111111, 0.18518518518518517, 0.14814814814814814, 0.1111111111111111, 0.1111111111111111, 0.4444444444444444, 0.2222222222222222, 0.07407407407407407, 0.2222222222222222, 0.4444444444444444, 0.18518518518518517, 0.7037037037037037, 0.18518518518518517, 0.2222222222222222, 0.18518518518518517, 0.2222222222222222, 0.1111111111111111, 0.4444444444444444, 0.14814814814814814, 0.2222222222222222, 0.037037037037037035, 0.37037037037037035, 0.2962962962962963, 0.1111111111111111, 0.18518518518518517, 0.25925925925925924, 0.2222222222222222, 0.18518518518518517, 0.5185185185185185, 0.07407407407407407, 0.4444444444444444, 0.2222222222222222, 0.3333333333333333, 0.14814814814814814, 0.18518518518518517]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"IyzsSMGBs1BI","colab_type":"code","outputId":"c4248bd6-86b9-4b66-ab7b-34400e86e7e1","executionInfo":{"status":"ok","timestamp":1589502805124,"user_tz":-420,"elapsed":731,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["train_rocauc_score = roc_auc_score(y_train, y_train_pred)\n","test_rocauc_score = roc_auc_score(y_test, pos_percentage) \n","print(\"nilai train untuk roc auc : \",train_rocauc_score,\"\\nnilai test untuk roc auc : \",test_rocauc_score)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["nilai train untuk roc auc :  0.6587626854020296 \n","nilai test untuk roc auc :  0.6114035087719298\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NYV6jSFcs97T","colab_type":"code","outputId":"82039c2b-a939-42ef-a52e-f4d98285e039","executionInfo":{"status":"ok","timestamp":1589502808060,"user_tz":-420,"elapsed":993,"user":{"displayName":"Refly A","photoUrl":"","userId":"02471401806927194179"}},"colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["train_acc_score = accuracy_score(y_train, y_train_pred)\n","test_acc_score = accuracy_score(y_test, y_test_pred)\n","\n","print(\"nilai train untuk accuracy : \",train_acc_score,\"\\nnilai test untuk accuracy : \",test_acc_score)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["nilai train untuk accuracy :  0.7903930131004366 \n","nilai test untuk accuracy :  0.7012987012987013\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_M4bS8D5tV9p","colab_type":"text"},"source":["Untuk model ini, saya sudah melakukan beberapa kali percobaan dengan, hasil yang didapat cenderung overfitting, dimana rata-rata beda nilai dari model Decision tree, baik itu ROC AUC dan Accuracy cenderung lebar, yaitu 4 persen pada ROC AUC dan 9 persen pada Accuracy. Sehingga pada model ini data masih cenderung overfit walaupun sudah menggunakan parameter yang di set dengan hasil randomized dari Randomized CV\n","Lalu perlunya perbaikan pada ROC AUC, sehingga model tidak cenderung salah dalam mengklasifikasikan."]},{"cell_type":"markdown","metadata":{"id":"gsXLJh0cvO1Z","colab_type":"text"},"source":["# Kesimpulan"]},{"cell_type":"markdown","metadata":{"id":"H9aXktPZun1_","colab_type":"text"},"source":["Jadi pada kesimpulan saya, hasil dari model yang lebih baik adalah hasil dari **K-Nearest Neighbors** dimana hasil dari nilai ROC AUC dan accuracy tidak berbeda jauh dan cenderung stabil dibandingkan hasil dari nilai **Decision tree, terutama yang menggunakan gini coefficient, walaupun pada criterion random juga terjadi hal yang sama** dimana model ini memiliki kecenderungan untuk overfitting pada jarak yang lebih lebar"]}]}